# Generated by Django 4.0.3 on 2022-03-02 17:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exempt',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор льготы')),
                ('exempt_tнpe', models.CharField(choices=[('student', 'Студент'), ('disabled', 'Инвалид'), ('veteran', 'Ветеран')], max_length=60, verbose_name='Название льготы')),
                ('exempt', models.PositiveIntegerField(verbose_name='Сумма льготы')),
            ],
        ),
        migrations.CreateModel(
            name='ExtStaff',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификационный номер специалиста')),
                ('doctor', models.CharField(max_length=60, verbose_name='ФИО специалиста')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='Номер карточки пациента')),
                ('name', models.CharField(max_length=60, verbose_name='ФИО пациента')),
                ('address', models.CharField(max_length=80, verbose_name='Адрес пациента')),
                ('district', models.CharField(max_length=20, verbose_name='Район города, где проживает')),
                ('policy_number', models.CharField(max_length=20, verbose_name='Номер страхового полиса')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Год рождения пациента')),
                ('sign', models.BooleanField(default=False, verbose_name='Работник предприятия (да/нет)')),
                ('department', models.CharField(blank=True, max_length=40, verbose_name='Отдел, в котором работает')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор специализации')),
                ('name', models.CharField(max_length=30, verbose_name='Название специализации')),
            ],
        ),
        migrations.CreateModel(
            name='Underwriter',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор страховой компании')),
                ('company', models.CharField(max_length=60, verbose_name='Название страховой компании')),
                ('comp_address', models.CharField(max_length=60, verbose_name='Адрес страховой компании')),
                ('bank', models.CharField(max_length=40, verbose_name='Банк страховой компании')),
                ('inn', models.PositiveIntegerField(verbose_name='ИНН страховой компании')),
                ('chief', models.CharField(max_length=60, verbose_name='ФИО директора страховой компании')),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификационный номер специалиста')),
                ('short_name', models.CharField(max_length=10, verbose_name='Аббревиатура')),
                ('full_name', models.CharField(max_length=60, verbose_name='полное название')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификационный номер врача')),
                ('doctor', models.CharField(max_length=60, verbose_name='ФИО лечащего врача')),
                ('expirience', models.PositiveSmallIntegerField(verbose_name='Стаж работы')),
                ('ext_staff', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.extstaff', verbose_name='Приглашенный специалист')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.specialization', verbose_name='Специализация')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.university', verbose_name='Университет')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор услуги')),
                ('name', models.CharField(max_length=30, verbose_name='Название услуги')),
                ('cost', models.PositiveIntegerField(verbose_name='Стоимость услуги')),
                ('specialization', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.specialization')),
            ],
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Идентификатор посещения')),
                ('date_start', models.DateTimeField(verbose_name='Дата помещения в стационар')),
                ('date_stop', models.DateTimeField(verbose_name='Дата выписки из стационара')),
                ('cost', models.PositiveIntegerField(verbose_name='Стоимость лечения всего курса')),
                ('summa', models.PositiveIntegerField(verbose_name='К оплате')),
                ('comment', models.TextField(max_length=200, verbose_name='Расшфировка')),
                ('services', models.ManyToManyField(to='hospital.service', verbose_name='Услуги')),
                ('underwriter', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='hospital.exempt', verbose_name='Льгота')),
            ],
        ),
        migrations.AddField(
            model_name='extstaff',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.university', verbose_name='Университет'),
        ),
    ]
